#include <bits/stdc++.h>
using namespace std;
int co=0;
int partition(int arr[], int l, int r);

int kthSmallest(int arr[], int l, int r, int K)
{
    if (K > 0 && K <= r - l + 1) {

     int pos = partition(arr, l, r);
        if (pos - l == K - 1){
                 co++;
            return arr[pos];}
        if (pos - l > K - 1){
                 co++;
            return kthSmallest(arr, l, pos - 1, K);
        }
         co++;
        return kthSmallest(arr, pos + 1, r,
                           K - pos + l - 1);
    }

        return INT_MAX;
}

void swap(int* a, int* b)
{
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int arr[], int l, int r)
{
    int x = arr[r], i = l;
    for (int j = l; j <= r - 1; j++) {
        if (arr[j] <= x) {
            swap(&arr[i], &arr[j]);
            i++;
        }
    }

    swap(&arr[i], &arr[r]);
    return i;
}
// Driver's code
int main()
{
    int arr[] = { 0,1,2,3,4,5,6,7};
    int N = sizeof(arr) / sizeof(arr[0]), K = 7;

    cout << "K'th smallest element is "
         << kthSmallest(arr, 0, N - 1, K);

         cout<<endl<<co;
    return 0;
}
